name: CI

on:
  pull_request:
    branches: [ main, week* ]
  push:
    branches: [ main ]

jobs:
  env-lint:
    name: 環境変数検証
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check environment templates
        run: |
          # テンプレートファイルの存在確認
          for env in development staging production; do
            if [ -f ".env.$env.template" ]; then
              echo "✅ テンプレートファイル .env.$env.template が存在します"
            else
              echo "⚠️ 警告: テンプレートファイル .env.$env.template が見つかりません"
            fi
          done
      - name: Run environment variable format check
        run: node scripts/check-env.js

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    name: テスト実行
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
      - name: Publish coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: true

  build:
    name: ビルド検証
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build

  test-python:
    name: AIサービステスト
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          cd ai-service
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
      - name: Run tests
        run: |
          cd ai-service
          if [ -f run_tests.sh ]; then
            bash run_tests.sh
          else
            python -m pytest
          fi 