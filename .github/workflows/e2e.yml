name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    # Stripeサービスコンテナを追加
    services:
      stripe-cli:
        image: stripe/stripe-cli:latest
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        ports:
          - 4242:4242
        # Webhookフォワーディングを設定
        options: >-
          --health-cmd "stripe listen --api-key=$STRIPE_SECRET_KEY --forward-to localhost:3000/api/webhooks/stripe --forward-connect-to localhost:3000/api/webhooks/stripe --log-level info"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # Node.js セットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 依存関係のインストール
      - name: Install dependencies
        run: npm ci

      # Playwright インストール
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # テスト用データベースのセットアップ
      - name: Setup test database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          npx prisma migrate deploy
          node scripts/seed-test-db.js

      # 開発サーバーのバックグラウンド起動
      - name: Start development server
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          NEXT_PUBLIC_AI_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_AI_SERVICE_URL }}
        run: npm run dev &
        # サーバー起動を待機
        
      - name: Wait for server
        run: |
          echo "Waiting for server to start..."
          timeout=60
          until $(curl --output /dev/null --silent --fail http://localhost:3000); do
            if [ $timeout -le 0 ]; then
              echo "Server failed to start within timeout"
              exit 1
            fi
            printf '.'
            timeout=$(($timeout - 1))
            sleep 1
          done

      # E2Eテスト実行
      - name: Run E2E tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_AI_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_AI_SERVICE_URL }}
        run: npx playwright test

      # テスト成果物をアップロード
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 